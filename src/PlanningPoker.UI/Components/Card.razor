@if (Side == Side.Front)
{
    <button type="button" class=@CardFrontStyle onclick=@HandleClick>
        <CardText Small=@Small Number=@Number />
    </button>
}
@if (Side == Side.Back)
{
    <div class=@CardBackStyle>
        <div class=@CardBackLineStyle></div>
    </div>
}

@code {
    [Parameter]
    public CardNumber? Number { get; set; }

    [Parameter]
    public Side Side { get; set; }

    [Parameter]
    public bool Small { get; set; }

    [Parameter]
    public Func<CardNumber, Task> OnClick { get; set; }

    private string CardFrontSmallStyle => Small ? "card-small" : string.Empty;
    private string CardFrontStyle => $"card-default card-front {CardFrontSmallStyle}";

    private string CardBackSmallStyle => Small ? "card-small" : string.Empty;
    private string CardBackStyle => $"card-default card-back {CardBackSmallStyle}";

    private string CardBackLineSmallStyle => Small ? "card-small" : string.Empty;
    private string CardBackLineStyle => $"card-default card-back-line {CardBackLineSmallStyle}";

    private Task HandleClick()
    {
        if (Number != null)
            OnClick?.Invoke(Number ?? CardNumber.Zero);

        return Task.CompletedTask;
    }
}