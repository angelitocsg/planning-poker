@inject ISessionService _sessionService;
@implements IDisposable

@page "/session/{sessionId}/enter"

<div class="game-container">
    <Modal LabelOk="entrar" OnOkClick=@HandleEnter
           LabelCancel="espiar" OnCancelClick=@HandleViewer />
</div>

@code {
    [Parameter]
    public string SessionId { get; set; }

    private void HandleEnter(string playerName)
    {
        if (string.IsNullOrWhiteSpace(playerName))
            return;

        _sessionService.JoinSession(SessionId, playerName);
    }

    private void HandleViewer()
    {
        _sessionService.JoinSession(SessionId, "[GUEST]");
    }

    private void EnterToSession()
    {
        Thread.Sleep(500);
        Console.WriteLine("Entrando na sessão: {0}", _stateContainer.GameSession.Id);
        _navigationManager.NavigateTo($"/session/{_stateContainer.GameSession.Id}");
    }

    protected override async Task OnInitializedAsync()
    {
        if (!await _sessionService.HasSession())
            _navigationManager.NavigateTo($"/");

        await base.OnInitializedAsync();
    }

    protected override void OnInitialized()
    {
        _stateContainer.OnChange += EnterToSession;
    }

    public void Dispose()
    {
        _stateContainer.OnChange -= EnterToSession;
    }

}
